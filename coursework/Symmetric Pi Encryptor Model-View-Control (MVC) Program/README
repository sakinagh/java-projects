 ~~ Symmetric Pi Encryptor Model-View-Control (MVC) Program ~~

 * * * * * * * * * * * * * * * * * * * * *
 * Sakina Ghafoor 			 *
 * Lab 4 Assignment Fall 2023   	 *
 * Techniques in Programming             *
 * * * * * * * * * * * * * * * * * * * * * 


 ~Introduction~
This Java application implements a symmetric file encryption system using the Model-View-Controller 
(MVC) architecture. It provides a graphical user interface (GUI) for users to encrypt and decrypt files using 
a custom encryption algorithm.



 ~Features~
The application consists of three main components:

Model: 
	The Model class represents the application's data and logic. It handles file encryption, 
	decryption, and manages the encryption key. The encryption algorithm involves XORing each byte with 
	the first digits of the number Pi.
View: 
	The View class is responsible for the graphical user interface. It provides an interface for users to 
	input file names, encryption keys, and initiate encryption processes. The GUI is implemented using Java 
	Swing components.

Control: 
	The Control class serves as the controller in the MVC architecture. It handles user input, triggers 
	actions in the Model, and updates the View accordingly. This class orchestrates the overall behavior 
	of the application.



 ~Instructions~
1. Run the Application: Execute the Lab4_runnable jar file to launch the application. The 
	GUI will appear, allowing users to input file names, encryption keys, 
	and perform encryption operations. In this case, an encryption key will not be 
	needed as the program already stores to key as the digits of pi. 

2. Encrypt a File: Click the "Read" button to select an input file. The program will then go 
	through the first digits of pi and use them as an encryption key throughout the file 
	contents. Click the "Encrypt & Save" button to initiate the encryption process. Type 
	the name of the new file which will be where the encrypted output will be saved 
	and select a destination. 

3. Decrypt a File: As this application uses symmetric encryption, the same key is used for 
	encryption and decryption. To decrypt a file, read the encrypted file and the program 
	will use the same key that was used for encryption by iterating through the same 
	first digits of pi. 

4. Reset: Click the "Reset" button to clear input fields and reset the application to its 
	initial state.



